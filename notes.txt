Current State of algorithm:

blur
resize to 120x120
get ccv 

sort or just post sort
with 
    minimizing total distance 
    3x weighted ccv

'''
Error handling:

    arg in set (0, 3)
    images/ folder must exist and contain images with .jpg or .png extensions (must be rgb image)
    MAX_SIZE must be in range (1*1, 1000...)
    RESIZE must be either true or false
    domLoop, ccvLoop, avgLoop, hstLoop must exist or be created if they don't

    DIR folder must exist


'''

Todo:

Readme

Error handling for user inputs (image folder, image names), variables the user might change 

any other simplifications

write meta image of the album covers and display that in the readme 

comments after mosaic implementation 

-------------------------

X Should implement image-size normalized histograms so multiple image sizes can appear in same folder 

X Should also not need album_list.txt but should just read image names in 

X Should time each entry

X Stop printing punctuation (python 2.7 not python 3)

X resizing should be an option for each sorting method

X pyc files created when imports are used 

X Should include the full fileName without truncating the extension

X How many times is the image resized 

getting rid of some of the indexing:

lists of name/value elements should be accessed like L[i].value

"""
Notes:
Replacements:
    domColor -> k_means
    scaleToSizeImage -> to_size
    L2difference -> L2_diff
    CCV_difference -> CCV_diff
    get_albums -> getImages(path)
    minDist -> minRGB
    minLabDist -> minLAB
    minL2diff(p, q_vec) -> minHST and inputs should be entries

    findMinimum replaces minRGB, minLAB, minHST, minCCV

    one function can potentially replace the sorting functions 

    loopSort works hist, CCV, RGB distance sort, what about insertionSort?
    will have to rewrite that part of code to work within existing framework

"""


"""
Notes:
Replacements:
    domColor -> k_means
    scaleToSizeImage -> to_size
    L2difference -> diffHST
    CCV_difference -> diffCCV
    get_albums -> getImages(path)
    macbeth_array -> macbethArray
"""

"""
Notes:
    Changes:
        macbethImg-> to_macbeth, only returns macbeth_array
        img2histogram -> img2HST
        don't need sRGB2macbeth(rgb)

        should implement normalized histograms that don't depend on image size
        you just dump your images in the images folder the loop is spit out 

"""

"""
Notes:
    Changes:
        macbethImg-> to_macbeth, only returns MACBETH_IMG

"""